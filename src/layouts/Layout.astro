---
import '../styles/reset.css';
import '../styles/globals.css';
import '../styles/mermaid-theme.css';

import Background from '../components/Background.astro';
import Navbar from '../components/Navbar.astro';
import LayoutGrid from '../components/LayoutGrid.astro';
import MermaidInit from '../components/MermaidInit.astro';
import { name, themeColor, twitterHandle } from 'spectre:globals';

interface Props {
	title: string;
	description?: string;
	image?: ImageMetadata;
	pagefindIgnore?: boolean;
	article?: {
		createdAt: Date;
		updatedAt?: Date;
	};
}

const { title, description, image, pagefindIgnore, article } = Astro.props;
const isHomePage = Astro.url.pathname === "/" || Astro.url.pathname === "";
const isBlogPost = Astro.url.pathname.startsWith("/blog/") && !Astro.url.pathname.endsWith("/blog/");

// Get the current path to determine which OG image to use
const currentPath = Astro.url.pathname;
let ogImagePath: string;

if (image?.src) {
  // Use custom image if provided
  ogImagePath = image.src;
} else if (isHomePage) {
  // Use home.png for home page
  ogImagePath = "/og/home.png";
} else {
  // For other pages, use a slug based on the URL path or title
  const slug = currentPath.split("/").pop() || title.toLowerCase().replace(/\s+/g, "-");
  ogImagePath = `/og/${slug}.png`;
}

const siteUrl = Astro.site?.toString() || 'https://emdinh.dev';
const currentUrl = new URL(Astro.url.pathname, siteUrl).toString();
// Ensure OG image URL is absolute for social sharing
const ogImageUrl = new URL(ogImagePath, siteUrl).toString();
const defaultDesc = "Personal blog and portfolio of Em Dinh - Software Engineer";
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.ico" />
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
		<link rel="manifest" href="/site.webmanifest">
		<meta name="generator" content={Astro.generator} />

		<title>{title}</title>
		{description && <meta name="description" content={description} />}
		<meta name="theme-color" content={themeColor}>

		<link rel="canonical" href={currentUrl} />

		<!-- OpenGraph / Facebook -->
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description || defaultDesc} />
		<meta property="og:image" content={ogImageUrl} />
		<meta property="og:url" content={currentUrl} />
		{!article && <meta property="og:type" content="website" />}
		<meta property="og:locale" content="en" />
		<meta property="og:site_name" content={name} />
		
		<!-- Add image dimensions for better sharing -->
		<meta property="og:image:width" content="1200" />
		<meta property="og:image:height" content="630" />
		<meta property="og:image:alt" content={`${title} | ${name}`} />

		{article && (
			<meta property="og:type" content="article" />
			<meta property="article:published_time" content={article.createdAt.toISOString()} />
			<meta property="article:author" content={name} />
		)}

		{article && article.updatedAt && (
			<meta property="article:modified_time" content={article.updatedAt.toISOString()} />
		)}

		<!-- Twitter / X -->
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:site" content={twitterHandle || "@emdinh_"} />
		<meta name="twitter:creator" content={twitterHandle || "@emdinh_"} />
		<meta name="twitter:title" content={title} />
		<meta name="twitter:description" content={description || defaultDesc} />
		<meta name="twitter:image" content={ogImageUrl} />
		<meta name="twitter:image:alt" content={`${title} | ${name}`} />
		<meta name="twitter:domain" content={siteUrl.replace(/^https?:\/\//, '')} />
		
		<!-- LinkedIn -->
		<meta property="linkedin:title" content={title} />
		<meta property="linkedin:description" content={description || defaultDesc} />
		<meta property="linkedin:image" content={ogImageUrl} />

		<!-- Only load Mermaid on blog post pages -->
		{isBlogPost && <MermaidInit />}
	</head>
	<body>
		<main data-pagefind-ignore={pagefindIgnore}>
			<Navbar />
			<LayoutGrid>
				<slot name="left" slot="left" />
				<slot name="right" slot="right" />
			</LayoutGrid>
			<slot name="404" />
		</main>
		<Background />
	</body>
</html>
